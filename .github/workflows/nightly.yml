name: Nightly Build

on:
  schedule:
    # Run at 3 AM UTC every day
    - cron: '0 3 * * *'
  workflow_dispatch: # Allow manual triggering

env:
  CARGO_TERM_COLOR: always

jobs:

  check-changes:
    name: Check for changes
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    outputs:
      should_build: ${{ steps.check.outputs.should_build }}
      short_sha: ${{ steps.check.outputs.short_sha }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    
    - name: Check for changes since last nightly
      id: check
      run: |
        # Check if there are changes in the last 24 hours
        if git log --since="24 hours ago" --pretty=format: --name-only | grep -q .; then
          echo "should_build=true" >> $GITHUB_OUTPUT
        else
          echo "should_build=false" >> $GITHUB_OUTPUT
        fi
        echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  build-nightly:
    name: Build Nightly
    needs: check-changes
    strategy:
      fail-fast: false
    if: needs.check-changes.outputs.should_build == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: ferrum
            asset_name: ferrum-nightly-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: ferrum.exe
            asset_name: ferrum-nightly-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: ferrum
            asset_name: ferrum-nightly-macos-x86_64

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@nightly
      with:
        targets: ${{ matrix.target }}

    - name: Install Zig
      uses: goto-bus-stop/setup-zig@v2
      with:
        version: 0.14.1

    - name: Build nightly binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Strip binary (unix)
      if: runner.os != 'Windows'
      run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

  create-nightly-release:
    name: Create Nightly Release
    needs: [check-changes, build-nightly]
    if: needs.check-changes.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create nightly release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Delete existing nightly release and tag
        gh release delete nightly --yes || true
        git push --delete origin nightly || true
        
        # Create new nightly release
        gh release create nightly \
          --title "Nightly Build ($(date +'%Y-%m-%d'))" \
          --notes "Automated nightly build from commit ${{ needs.check-changes.outputs.short_sha }}" \
          --prerelease \
          ferrum-nightly-*/ferrum* \
          ferrum-nightly-*/*.exe
